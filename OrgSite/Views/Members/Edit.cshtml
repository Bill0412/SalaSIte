@using OrgSite.Models;
@model OrgSite.Models.Member

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
    <link rel="stylesheet" type="text/css" href="~/Content/themes/base/datepicker.css" />

}

<h2>编辑</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="form-horizontal">
                <h4>成员信息</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId)

                <div class="form-group">
                    @Html.LabelFor(model => model.MemberLogin.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <span class="col-md-10 text-left">
                        @Model.MemberLogin.UserName
                    </span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RealName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RealName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RealName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Session["login"] != null && ((LoginStatus)Session["login"]).Position != "社员")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div id="datepick" class="col-md-10 col-md-offset-2"></div>
                </div>
                @**@

                <div class="form-group">
                    @Html.LabelFor(model => model.SelfDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.SelfDescription, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelfDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-2">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                    <div class="col-md-8">
                        <input type="button" value="Resign" id="resignbtn" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(function () {
        $("#resignbtn").bind("click", function () {
            confirm("确定提交离任吗？");
        })
    })
</script>
<div>
    @Html.ActionLink("返回列表", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#datepick').datepicker({
                altField: 'input#Birthday', dateFormat: "dd-mm-yy", changeYear: true, changeMonth: true
            });
        });
    </script>
}
